name: CI

on:
  push:
    branches: [master]
  pull_request:

jobs:
  podspec:
    runs-on: macos-latest
    name: CocoaPods Lint
    env:
      DEVELOPER_DIR: "/Applications/Xcode_11.4.1.app"
    steps:
      - uses: actions/checkout@v2
      - run: pod lib lint --allow-warnings

  xcode:
    runs-on: macos-latest
    strategy:
      matrix:
        xcode: [10.3, 11.3.1, 11.4.1]
      fail-fast: false
    name: Xcode ${{ matrix.xcode }}
    env:
      DEVELOPER_DIR: "/Applications/Xcode_${{ matrix.xcode }}.app"
    steps:
      - uses: actions/checkout@v2
      - name: test
        run: |
          set -o pipefail
          xcodebuild build-for-testing test-without-building -workspace APIKit.xcworkspace -scheme APIKit -configuration Release ENABLE_TESTABILITY=YES | xcpretty -c
          xcodebuild build-for-testing test-without-building -workspace APIKit.xcworkspace -scheme APIKit -configuration Release -sdk iphonesimulator -destination "name=iPhone 8" ENABLE_TESTABILITY=YES | xcpretty -c
          xcodebuild build-for-testing test-without-building -workspace APIKit.xcworkspace -scheme APIKit -configuration Release -sdk appletvsimulator -destination "name=Apple TV" ENABLE_TESTABILITY=YES | xcpretty -c
      - name: codecov
        run: bash <(curl -s https://codecov.io/bash)
        if: success()

  swiftpm:
    runs-on: macos-latest
    strategy:
      matrix:
        xcode: [11.3.1, 11.4.1]
      fail-fast: false
    name: SwiftPM (Xcode ${{ matrix.xcode }})
    env:
      DEVELOPER_DIR: "/Applications/Xcode_${{ matrix.xcode }}.app"
    steps:
      - uses: actions/checkout@v2
      - name: build and test
        run: |
          swift build
          swift test
